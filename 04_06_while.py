# 순환문 (Loop)

# 특정 코드를 일정 횟수 반복수행하는 경우 사용하는 구문
# 순환문(loop) 혹은 반복문(iteration) 이라고 한다

# 파이썬에는 while, for 구문이 순환문을 수행합니다

#------------------------
# while  순환문

# while 순환문 구조,  조건문이 '참' 인 동안 수행문장을 반복수행

# while <조건문>:                             # 조건문 : 참 / 거짓 판명
#     <수행할 문장1>
#     <수행할 문장2>
#     <수행할 문장3>
#     ...
# else:
#      순환문 빠져나오기 전에 수행


num = 0
while num < 10:
    print(num, end = ", ")
    num += 1
    
print("\n while 종료후", "num = ", num)


# 순환문에서 중요한 것은
# 1. 몇번 순환을 하는가?
# 2. 순환하는 동안 변수값의 변화 범위는?
# 3. 순환문 종료후 변수값은?

# 위 순환문의 경우
# 1. 총 10번 순환을 했고
# 2. 순환하는 동안 num 변수값은 0 부터 9 까지 변화
# 3. 순환문 종료후 num 값은 10




i, j = 0, 10
while i < j:
    print("i=", i, ", j=", j)
    i += 2
    j -= 1
    
    
print("while 종료 후 i=", i, ", j값은", j)


print("*" * 50)

"""
2 x 1 = 2
2 x 2 = 4
2 x 3 = 6
2 x 4 = 8
2 x 5 = 10
2 x 6 = 12
2 x 7 = 14
2 x 8 = 16
2 x 9 = 18
"""


n = 1                                  # 초기값
while n <= 9:                          # 비교식
    print("2 x", n, "=", n * 2)
    n += 1                             # 증감식 
    
print("2단 출력 종료")    

# 증감식 빠지면( 혹은 종료조건이 없으면) 무한루프에 빠짐

i = 2
j = 1
while j <= 9:
    print(i, "x", j, "=", i*j)
    j += 1



# 1 ~ n 까지의 숫자 중에서
# 3과 7의 공배수만 출력

n = 200
i = 1
while i <= n:
    if i % 3 == 0 and i % 7 == 0:
        print(i)
    i += 1


# 중첩 순환문(nested loop) : 순환문 안에 순환문

# 구구단 
# 2단 ~ 9단 
    
"""
2 x 1 = 2
2 x 2 = 4
...
2 x 9 = 18
3 x 1 = 3
..
3 x 9 = 27
..
..
9 x 9 = 81
"""
print("구구단", "*" * 20)


# 내가 한 것

i = 2
j = 1
while i <= 9:
    while j <= 9:
        print(i, "*", j, "=", i*j)
        j += 1
    i += 1


# 강사님께서 한 것

dan = 2
while dan <= 9:
    print(dan, "단")
    # x1 ~ x9 까지 순환
    nul = 1
    while nul <= 9:
        print(dan, "x", nul, "=", dan * nul)
        nul += 1
    print()
    dan += 1







